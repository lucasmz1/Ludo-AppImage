name: Ludo AppImage

on:
  schedule:
    - cron: "0 0 */6 * *"
  push:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main ]
    paths-ignore: [ '**/README.md' ]
  workflow_dispatch:

jobs:
  build:
    name: setup os target
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Get Ludo version from GitHub
        run: |
          VERSION=$(curl -s https://api.github.com/repos/libretro/ludo/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Make AppImage
        run: |
          pacman -Sy xorg-server-xvfb findutils file binutils patchelf grep sed coreutils strace wget curl glfw-x11 mesa openal fuse2 fuse3 --noconfirm
          chmod a+x ludo-appimage.sh
          ./ludo-appimage.sh
          find . -iname 'Ludo*.AppImage' -type f -exec mv {} "${GITHUB_WORKSPACE}" \;
          APPIMAGE=$(find -iname '**.AppImage' -type d)
          echo "${APP_VERSION}" > "${GITHUB_WORKSPACE}/version.txt"

  release:
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Download AppImage artifact
      uses: actions/download-artifact@v4
      with:
        name: AppImage
    
    - name: Download version artifact
      uses: actions/download-artifact@v4
      with:
        name: version
    
    - name: Read version
      run: |
          VERSION=$(cat version)
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Delete Previous Release
      run: |
          gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y || echo "No release to delete"
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
          name: "Ludo ${{ env.APP_VERSION }}"
          tag_name: ${{ env.APP_VERSION }}
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            AppImage/Ludo-${{ env.APP_VERSION }}.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
